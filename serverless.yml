service: tourneyman

provider:
  name: aws
  runtime: python3.7

# you can add statements to the Lambda function's IAM Role here
#  iamRoleStatements:
#    - Effect: "Allow"
#      Action:
#        - "s3:ListBucket"
#      Resource: { "Fn::Join" : ["", ["arn:aws:s3:::", { "Ref" : "ServerlessDeploymentBucket" } ] ]  }
#    - Effect: "Allow"
#      Action:
#        - "s3:PutObject"
#      Resource:
#        Fn::Join:
#          - ""
#          - - "arn:aws:s3:::"
#            - "Ref" : "ServerlessDeploymentBucket"
#            - "/*"

# you can define service wide environment variables here
#  environment:
#    variable1: value1

package:
  include:
    - fe_handlers/**
    - models/**
  exclude:
    - tests/**
    - frontend/**

functions:
  hello:
    handler: handler.hello

resources:
  Resources:
    CognitoUserPool:
      Type: AWS::Cognito::UserPool
      Properties:
        UserPoolName: tm-${opt:stage}-user-pool
        Schema:
          - Name: email
            AttributeDataType: String
            Mutable: false
            Required: true

    CognitoUserPoolClient:
      Type: AWS::Cognito::UserPoolClient
      Properties:
        ClientName: tm-${opt:stage}-user-pool-client
        UserPoolId:
          Ref: CognitoUserPool
        GenerateSecret: false

  Outputs:
    UserPoolId:
      Value:
        Ref: CognitoUserPool
    UserPoolClientId:
      Value:
        Ref: CognitoUserPoolClient

plugins:
  - serverless-python-requirements
